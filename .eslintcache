[{"P:\\web\\caroadmin\\src\\index.js":"1","P:\\web\\caroadmin\\src\\reportWebVitals.js":"2","P:\\web\\caroadmin\\src\\layouts\\App\\index.js":"3","P:\\web\\caroadmin\\src\\layouts\\Header\\index.js":"4","P:\\web\\caroadmin\\src\\layouts\\Footer\\index.js":"5","P:\\web\\caroadmin\\src\\layouts\\Loading\\index.js":"6","P:\\web\\caroadmin\\src\\components\\DashBoard\\index.js":"7","P:\\web\\caroadmin\\src\\components\\LogIn\\index.js":"8","P:\\web\\caroadmin\\src\\components\\SignUp\\index.js":"9","P:\\web\\caroadmin\\src\\components\\Profile\\index.js":"10","P:\\web\\caroadmin\\src\\layouts\\Footer\\Copyright.js":"11","P:\\web\\caroadmin\\src\\services\\auth-header.js":"12","P:\\web\\caroadmin\\src\\services\\auth.service.js":"13","P:\\web\\caroadmin\\src\\Utils\\index.js":"14","P:\\web\\caroadmin\\src\\dialogs\\ConfirmDialog\\index.js":"15"},{"size":526,"mtime":1607217056479,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1607217056481,"results":"18","hashOfConfig":"17"},{"size":1898,"mtime":1607225192586,"results":"19","hashOfConfig":"17"},{"size":3266,"mtime":1607225178901,"results":"20","hashOfConfig":"17"},{"size":1186,"mtime":1607225185374,"results":"21","hashOfConfig":"17"},{"size":582,"mtime":1607225175282,"results":"22","hashOfConfig":"17"},{"size":1421,"mtime":1607225207957,"results":"23","hashOfConfig":"17"},{"size":6652,"mtime":1607239399286,"results":"24","hashOfConfig":"17"},{"size":8132,"mtime":1607225198887,"results":"25","hashOfConfig":"17"},{"size":7696,"mtime":1607239371693,"results":"26","hashOfConfig":"17"},{"size":469,"mtime":1607225188927,"results":"27","hashOfConfig":"17"},{"size":259,"mtime":1607225171089,"results":"28","hashOfConfig":"17"},{"size":3990,"mtime":1607238926525,"results":"29","hashOfConfig":"17"},{"size":412,"mtime":1607239052171,"results":"30","hashOfConfig":"17"},{"size":2314,"mtime":1607225217268,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"lgsec6",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"P:\\web\\caroadmin\\src\\index.js",[],["72","73"],"P:\\web\\caroadmin\\src\\reportWebVitals.js",[],"P:\\web\\caroadmin\\src\\layouts\\App\\index.js",["74","75","76"],"import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\n// Material UI Core\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n// Components\r\nimport Header from \"../Header\";\r\nimport Footer from \"../Footer\";\r\nimport DashBoard from \"../../components/DashBoard\";\r\nimport LogIn from \"../../components/LogIn\";\r\nimport SignUp from \"../../components/SignUp\";\r\nimport Profile from \"../../components/Profile\";\r\nimport Loading from \"../../layouts/Loading\";\r\nimport createHashHistory from \"history/createHashHistory\";\r\n\r\n//const hashHistory = createHashHistory({ basename: process.env.PUBLIC_URL });\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Loading loading={isLoading} />\r\n      <Router /*history={hashHistory} basename={process.env.PUBLIC_URL} */>\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            {/* Header */}\r\n            <Header />\r\n            <LogIn setIsLoading={setIsLoading} />\r\n          </Route>\r\n          {/*<Route path=\"/signup\">\r\n              <Header/>\r\n              <SignUp setIsLoading={setIsLoading}/>\r\n          </Route>*/}\r\n          <Route path=\"/profile\">\r\n            {/* Header */}\r\n            <Header />\r\n            <Profile setIsLoading={setIsLoading} />\r\n          </Route>\r\n          <Route path=\"/dashboard\">\r\n            {/* Header */}\r\n            <Header />\r\n            {/* End Header */}\r\n            <DashBoard setIsLoading={setIsLoading} />\r\n            {/* Footer */}\r\n            <Footer />\r\n            {/* End footer */}\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Redirect to=\"/dashboard\" />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","P:\\web\\caroadmin\\src\\layouts\\Header\\index.js",[],"P:\\web\\caroadmin\\src\\layouts\\Footer\\index.js",["77","78"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Copyright from \"./Copyright.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"100vh\",\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: \"auto\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[200]\r\n        : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nexport default function StickyFooter() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <footer className={classes.footer}>\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"body1\" align=\"center\">\r\n            Build your Agile/Scrum.\r\n          </Typography>\r\n          <Copyright />\r\n        </Container>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","P:\\web\\caroadmin\\src\\layouts\\Loading\\index.js",[],"P:\\web\\caroadmin\\src\\components\\DashBoard\\index.js",["79","80","81","82","83","84","85","86"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./DashBoard.css\";\r\n// Material UI Core\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, rgbToHex } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n// Material Icons\r\n\r\n// Components\r\nimport ConfirmDialog from \"../../dialogs/ConfirmDialog\";\r\n\r\n// Service\r\nimport authHeader from \"../../services/auth-header.js\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport constant from \"../../Utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n    maxWidth: \"1400px\",\r\n  },\r\n}));\r\n\r\nconst DashBoard = (props) => {\r\n  const history = useHistory();\r\n  if (!AuthService.getCurrentUser()) {\r\n    //history.push('/login');\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const user = AuthService.getCurrentUser();\r\n\r\n  return (\r\n    <main>\r\n      <Container className={classes.cardGrid} maxWidth=\"md\">\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"h4\"\r\n          component=\"h2\"\r\n          className=\"title-green\"\r\n          style={{ fontWeight: \"500\" }}\r\n        >\r\n          Go Go Go !!!\r\n        </Typography>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n","P:\\web\\caroadmin\\src\\components\\LogIn\\index.js",["87","88","89"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport GoogleIcon from \"../../vendors/images/google.png\";\r\nimport BackgroundImg from \"../../vendors/images/background-img.jpg\";\r\n\r\n// Components\r\nimport Footer from \"../../layouts/Footer\";\r\n\r\n// Constant && Services\r\nimport AuthService from \"../../services/auth.service\";\r\nimport constant from \"../../Utils/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bgImg: {\r\n    width: \"100%\",\r\n    height: \"90%\",\r\n    position: \"absolute\",\r\n    zIndex: \"-1\",\r\n    backgroundImage: \"url(\" + BackgroundImg + \")\",\r\n    backgroundSize: \"80% 100%\",\r\n  },\r\n  title: {\r\n    color: \"#016310\",\r\n    zIndex: \"1\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#016310\",\r\n  },\r\n  formMessage: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.1em\",\r\n  },\r\n  googleBtn: {\r\n    margin: theme.spacing(0, 0, 2, 0),\r\n    border: \"1.5px solid #dd4b39\",\r\n    color: \"#dd4b39\",\r\n  },\r\n  googleIcon: {\r\n    marginRight: \"10px\",\r\n  },\r\n  facebookIcon: {\r\n    fontSize: \"24px !important\",\r\n  },\r\n  anchor: {\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function LogIn(props) {\r\n  const history = useHistory();\r\n  if (AuthService.getCurrentUser()) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMsg, setErrMsg] = useState(\"\");\r\n\r\n  function handleLogIn(event) {\r\n    event.preventDefault();\r\n    if (!username || !password) {\r\n      return;\r\n    }\r\n    props.setIsLoading(true);\r\n    const fetch = AuthService.logIn(username, password).then(\r\n      (result) => {\r\n        if (result.isSuccess) {\r\n          history.push(\"/dashboard\");\r\n        } else {\r\n          setPassword(\"\");\r\n          // Error message\r\n          setErrMsg(result.message);\r\n        }\r\n        props.setIsLoading(false);\r\n      },\r\n      (error) => {\r\n        if (error) {\r\n          props.setIsLoading(false);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  function handleUsernameChange(evt) {\r\n    setUsername(evt.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(evt) {\r\n    setPassword(evt.target.value);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.bgImg}></div>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={(evt) => handleLogIn(evt)}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n              value={username}\r\n              onChange={(evt) => handleUsernameChange(evt)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(evt) => handlePasswordChange(evt)}\r\n            />\r\n            <FormHelperText className={classes.formMessage} error={true}>\r\n              {errorMsg}\r\n            </FormHelperText>\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <a\r\n              href={constant.api + constant.userPath + constant.authGooglePath}\r\n              className={classes.anchor}\r\n            >\r\n              <Button\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                className={classes.googleBtn}\r\n              >\r\n                <img src={GoogleIcon} className={classes.googleIcon} />\r\n                Sign In With google\r\n              </Button>\r\n            </a>\r\n            <a\r\n              href={constant.api + constant.userPath + constant.authFbPath}\r\n              className={classes.anchor}\r\n            >\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<FacebookIcon className={classes.facebookIcon} />}\r\n              >\r\n                Sign In With Facebook\r\n              </Button>\r\n            </a>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","P:\\web\\caroadmin\\src\\components\\SignUp\\index.js",["90","91","92"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport BackgroundImg from \"../../vendors/images/background-img.jpg\";\r\n\r\n// Components\r\nimport Footer from \"../../layouts/Footer\";\r\n\r\n// Constant && Services\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bgImg: {\r\n    width: \"100%\",\r\n    height: \"90%\",\r\n    position: \"absolute\",\r\n    zIndex: \"-1\",\r\n    backgroundImage: \"url(\" + BackgroundImg + \")\",\r\n    backgroundSize: \"80% 100%\",\r\n  },\r\n  title: {\r\n    color: \"#016310\",\r\n    zIndex: \"1\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.error.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 0, 1),\r\n    backgroundColor: \"#016310\",\r\n  },\r\n  formMessageSuccess: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.1em\",\r\n    color: \"#4BB543\",\r\n  },\r\n  formMessageFail: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.1em\",\r\n    color: \"#ff1500\",\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const history = useHistory();\r\n  if (AuthService.getCurrentUser()) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repassword, setRePassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isSuccess, setIsSuccess] = useState(true);\r\n  const [errorMsg, setErrMsg] = useState(\"\");\r\n\r\n  function handleUsernameChange(evt) {\r\n    setUsername(evt.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(evt) {\r\n    setPassword(evt.target.value);\r\n  }\r\n\r\n  function handleRePasswordChange(evt) {\r\n    setRePassword(evt.target.value);\r\n  }\r\n\r\n  function handleNameChange(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleEmailChange(evt) {\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  function handleSignUp(event) {\r\n    event.preventDefault();\r\n    if (\r\n      !username ||\r\n      !password ||\r\n      !repassword ||\r\n      password != repassword ||\r\n      !name ||\r\n      !email\r\n    ) {\r\n      return;\r\n    }\r\n    props.setIsLoading(true);\r\n    const fetch = AuthService.signUp(username, password, name, email).then(\r\n      (result) => {\r\n        setIsSuccess(result.isSuccess);\r\n        setErrMsg(result.message);\r\n        props.setIsLoading(false);\r\n      },\r\n      (error) => {\r\n        if (error) {\r\n          props.setIsLoading(false);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.bgImg}></div>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <CreateIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n            Sign up\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={(evt) => handleSignUp(evt)}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"username\"\r\n                  name=\"username\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  autoFocus\r\n                  error={username === \"\"}\r\n                  helperText={username === \"\" ? \"Enter Username\" : \" \"}\r\n                  onChange={(evt) => handleUsernameChange(evt)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  error={\r\n                    password === \"\" ||\r\n                    repassword === \"\" ||\r\n                    password !== repassword\r\n                  }\r\n                  helperText={\r\n                    password === \"\" ||\r\n                    repassword === \"\" ||\r\n                    password !== repassword\r\n                      ? \"Confirm Password incorrect\"\r\n                      : \" \"\r\n                  }\r\n                  onChange={(evt) => handlePasswordChange(evt)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"re-password\"\r\n                  label=\"Confirm Password\"\r\n                  type=\"password\"\r\n                  id=\"re-password\"\r\n                  autoComplete=\"re-password\"\r\n                  error={\r\n                    password === \"\" ||\r\n                    repassword === \"\" ||\r\n                    password !== repassword\r\n                  }\r\n                  helperText={\r\n                    password === \"\" ||\r\n                    repassword === \"\" ||\r\n                    password !== repassword\r\n                      ? \"Confirm Password incorrect\"\r\n                      : \" \"\r\n                  }\r\n                  onChange={(evt) => handleRePasswordChange(evt)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"fullName\"\r\n                  name=\"fullName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"fullName\"\r\n                  label=\"Full name\"\r\n                  error={name === \"\"}\r\n                  helperText={name === \"\" ? \"Enter Name\" : \" \"}\r\n                  onChange={(evt) => handleNameChange(evt)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"email\"\r\n                  name=\"email\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  type=\"email\"\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  error={email === \"\"}\r\n                  helperText={email === \"\" ? \"Enter Email\" : \" \"}\r\n                  onChange={(evt) => handleEmailChange(evt)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <FormHelperText\r\n              className={\r\n                isSuccess ? classes.formMessageSuccess : classes.formMessageFail\r\n              }\r\n              error={!isSuccess}\r\n            >\r\n              {errorMsg}\r\n            </FormHelperText>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","P:\\web\\caroadmin\\src\\components\\Profile\\index.js",["93","94"],"import React, { useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\n// Material Icons\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\n\r\n// Components\r\nimport Footer from \"../../layouts/Footer\";\r\n\r\n// Constant && Services\r\nimport authHeader from \"../../services/auth-header.js\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport constant from \"../../Utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(3),\r\n    color: \"#ffffff\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n    fontSize: \"60px\",\r\n    padding: \"5px\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 0, 1),\r\n  },\r\n  formMessageSuccess: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.1em\",\r\n    color: \"#4BB543\",\r\n  },\r\n  formMessageFail: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.1em\",\r\n    color: \"#ff1500\",\r\n  },\r\n  formControl: {\r\n    color: \"#555555 !important\",\r\n  },\r\n  updateIcon: {\r\n    marginLeft: \"10px\",\r\n    verticalAlign: \"middle\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const history = useHistory();\r\n  const user = AuthService.getCurrentUser();\r\n  if (!user) {\r\n    history.push(\"/login\");\r\n  }\r\n  const classes = useStyles();\r\n  const [disabled, setDisabled] = useState(true);\r\n  const nameRef = useRef();\r\n  const [name, setName] = useState(user.name);\r\n  const [email, setEmail] = useState(user.email);\r\n  const [gender, setGender] = useState(user.gender);\r\n  const [isSuccess, setIsSuccess] = useState(true);\r\n  const [errorMsg, setErrMsg] = useState(\"\");\r\n\r\n  const toggleUpdate = (evt) => {\r\n    setDisabled(!disabled);\r\n    const timeout = setTimeout(() => {\r\n      nameRef.current.focus();\r\n    }, 100);\r\n  };\r\n\r\n  const handleNameChange = (evt) => {\r\n    setName(evt.target.value);\r\n  };\r\n\r\n  const handleEmailChange = (evt) => {\r\n    setEmail(evt.target.value);\r\n  };\r\n\r\n  const handleGenderChange = (evt) => {\r\n    setGender(evt.target.value);\r\n  };\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault();\r\n    if (!name || !email || !gender) {\r\n      return;\r\n    }\r\n    props.setIsLoading(true);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: Object.assign(\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        authHeader()\r\n      ),\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n        gender: gender,\r\n      }),\r\n    };\r\n    return fetch(\r\n      constant.api + constant.userPath + constant.updateProfilePath,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (result) => {\r\n          if (result.isSuccess) {\r\n            AuthService.updateCurrentUser({\r\n              name: name,\r\n              email: email,\r\n              gender: gender,\r\n            });\r\n          }\r\n          setIsSuccess(result.isSuccess);\r\n          setErrMsg(result.message);\r\n          props.setIsLoading(false);\r\n        },\r\n        (error) => {\r\n          if (error) {\r\n            props.setIsLoading(false);\r\n          }\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <AccountBoxIcon className={classes.avatar}></AccountBoxIcon>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Your Profile\r\n          <BorderColorIcon\r\n            className={classes.updateIcon}\r\n            onClick={(evt) => toggleUpdate(evt)}\r\n          />\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={(evt) => handleUpdate(evt)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fullName\"\r\n                name=\"fullName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"fullName\"\r\n                label=\"Full name\"\r\n                autoFocus\r\n                inputRef={nameRef}\r\n                InputProps={{\r\n                  className: classes.formControl,\r\n                }}\r\n                disabled={disabled}\r\n                value={name}\r\n                error={name === \"\"}\r\n                onChange={(evt) => handleNameChange(evt)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"email\"\r\n                name=\"email\"\r\n                variant=\"outlined\"\r\n                required\r\n                type=\"email\"\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                InputProps={{\r\n                  className: classes.formControl,\r\n                }}\r\n                disabled={disabled}\r\n                value={email}\r\n                error={email === \"\" && !disabled}\r\n                onChange={(evt) => handleEmailChange(evt)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Gender</FormLabel>\r\n                <RadioGroup\r\n                  row\r\n                  aria-label=\"gender\"\r\n                  name=\"gender1\"\r\n                  value={gender}\r\n                  onChange={handleGenderChange}\r\n                >\r\n                  <FormControlLabel\r\n                    disabled={disabled}\r\n                    value=\"Male\"\r\n                    control={<Radio />}\r\n                    label=\"Male\"\r\n                  />\r\n                  <FormControlLabel\r\n                    disabled={disabled}\r\n                    value=\"Female\"\r\n                    control={<Radio />}\r\n                    label=\"Female\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <FormHelperText\r\n            className={\r\n              isSuccess ? classes.formMessageSuccess : classes.formMessageFail\r\n            }\r\n            error={!isSuccess}\r\n          >\r\n            {errorMsg}\r\n          </FormHelperText>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={disabled}\r\n            className={classes.submit}\r\n          >\r\n            Update\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/dashBoard\" variant=\"body2\">\r\n                {\"Back to Dashboard\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","P:\\web\\caroadmin\\src\\layouts\\Footer\\Copyright.js",[],"P:\\web\\caroadmin\\src\\services\\auth-header.js",[],"P:\\web\\caroadmin\\src\\services\\auth.service.js",[],"P:\\web\\caroadmin\\src\\Utils\\index.js",["95"],"const api = \"http://localhost:8080/api\";\r\n\r\n// User\r\nconst logInPath = \"/login\";\r\nconst signUpPath = \"/signup\";\r\n//\r\nconst userPath = \"/user\"\r\n\r\nfunction queryParams(params) {\r\n  return Object.keys(params)\r\n    .map((k) => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\r\n    .join(\"&\");\r\n}\r\n\r\nexport default {\r\n  api,\r\n  userPath,\r\n  // User\r\n  logInPath,\r\n  signUpPath,\r\n  //\r\n  queryParams,\r\n};\r\n","P:\\web\\caroadmin\\src\\dialogs\\ConfirmDialog\\index.js",["96","97","98","99"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n// Service\r\nimport constant from \"../../Utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    fontSize: \"1.5em\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  content: {\r\n    minWidth: \"350px\",\r\n    textAlign: \"center\",\r\n  },\r\n  action: {\r\n    justifyContent: \"center\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  contentText: {\r\n    textAlign: \"left\",\r\n    wordWrap: \"break-word\",\r\n  },\r\n}));\r\n\r\nexport default function ConfirmDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleOK = async () => {\r\n    await props.action();\r\n    props.setOpen(false);\r\n  };\r\n  const handleClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle\r\n          className={classes.title}\r\n          component=\"h1\"\r\n          id=\"form-dialog-title\"\r\n        >\r\n          Confirmation\r\n        </DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          <DialogContentText className={classes.contentText}>\r\n            {props.children}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className={classes.action}>\r\n          <Button\r\n            onClick={handleOK}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n          >\r\n            OK\r\n          </Button>\r\n          <Button\r\n            onClick={handleClose}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.button}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",["100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":6,"column":3,"nodeType":"108","messageId":"109","endLine":6,"endColumn":7},{"ruleId":"106","severity":1,"message":"110","line":18,"column":8,"nodeType":"108","messageId":"109","endLine":18,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":21,"column":8,"nodeType":"108","messageId":"109","endLine":21,"endColumn":25},{"ruleId":"106","severity":1,"message":"112","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":6,"column":8,"nodeType":"108","messageId":"109","endLine":6,"endColumn":12},{"ruleId":"106","severity":1,"message":"113","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"114","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"115","line":6,"column":22,"nodeType":"108","messageId":"109","endLine":6,"endColumn":30},{"ruleId":"106","severity":1,"message":"116","line":12,"column":8,"nodeType":"108","messageId":"109","endLine":12,"endColumn":21},{"ruleId":"106","severity":1,"message":"117","line":15,"column":8,"nodeType":"108","messageId":"109","endLine":15,"endColumn":18},{"ruleId":"106","severity":1,"message":"118","line":17,"column":8,"nodeType":"108","messageId":"109","endLine":17,"endColumn":16},{"ruleId":"106","severity":1,"message":"119","line":31,"column":9,"nodeType":"108","messageId":"109","endLine":31,"endColumn":16},{"ruleId":"106","severity":1,"message":"120","line":37,"column":9,"nodeType":"108","messageId":"109","endLine":37,"endColumn":13},{"ruleId":"106","severity":1,"message":"121","line":21,"column":8,"nodeType":"108","messageId":"109","endLine":21,"endColumn":14},{"ruleId":"106","severity":1,"message":"122","line":97,"column":11,"nodeType":"108","messageId":"109","endLine":97,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":201,"column":17,"nodeType":"125","endLine":201,"endColumn":72},{"ruleId":"106","severity":1,"message":"121","line":17,"column":8,"nodeType":"108","messageId":"109","endLine":17,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":105,"column":16,"nodeType":"128","messageId":"129","endLine":105,"endColumn":18},{"ruleId":"106","severity":1,"message":"122","line":112,"column":11,"nodeType":"108","messageId":"109","endLine":112,"endColumn":16},{"ruleId":"106","severity":1,"message":"121","line":23,"column":8,"nodeType":"108","messageId":"109","endLine":23,"endColumn":14},{"ruleId":"106","severity":1,"message":"130","line":88,"column":11,"nodeType":"108","messageId":"109","endLine":88,"endColumn":18},{"ruleId":"131","severity":1,"message":"132","line":15,"column":1,"nodeType":"133","endLine":23,"endColumn":3},{"ruleId":"106","severity":1,"message":"113","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"134","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":17},{"ruleId":"106","severity":1,"message":"135","line":10,"column":8,"nodeType":"108","messageId":"109","endLine":10,"endColumn":22},{"ruleId":"106","severity":1,"message":"118","line":13,"column":8,"nodeType":"108","messageId":"109","endLine":13,"endColumn":16},{"ruleId":"102","replacedBy":"136"},{"ruleId":"104","replacedBy":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'SignUp' is defined but never used.","'createHashHistory' is defined but never used.","'CssBaseline' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'rgbToHex' is defined but never used.","'ConfirmDialog' is defined but never used.","'authHeader' is defined but never used.","'constant' is defined but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","'Footer' is defined but never used.","'fetch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'timeout' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'TextField' is defined but never used.","'FormHelperText' is defined but never used.",["138"],["139"],"no-global-assign","no-unsafe-negation"]