[{"P:\\web\\caroadmin\\src\\index.js":"1","P:\\web\\caroadmin\\src\\reportWebVitals.js":"2","P:\\web\\caroadmin\\src\\layouts\\App\\index.js":"3","P:\\web\\caroadmin\\src\\layouts\\Header\\index.js":"4","P:\\web\\caroadmin\\src\\layouts\\Footer\\index.js":"5","P:\\web\\caroadmin\\src\\layouts\\Loading\\index.js":"6","P:\\web\\caroadmin\\src\\components\\DashBoard\\index.js":"7","P:\\web\\caroadmin\\src\\components\\LogIn\\index.js":"8","P:\\web\\caroadmin\\src\\components\\SignUp\\index.js":"9","P:\\web\\caroadmin\\src\\components\\Profile\\index.js":"10","P:\\web\\caroadmin\\src\\layouts\\Footer\\Copyright.js":"11","P:\\web\\caroadmin\\src\\services\\auth-header.js":"12","P:\\web\\caroadmin\\src\\services\\auth.service.js":"13","P:\\web\\caroadmin\\src\\Utils\\index.js":"14","P:\\web\\caroadmin\\src\\dialogs\\ConfirmDialog\\index.js":"15"},{"size":526,"mtime":1607217056479,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1607217056481,"results":"18","hashOfConfig":"17"},{"size":1899,"mtime":1607224274390,"results":"19","hashOfConfig":"17"},{"size":3502,"mtime":1607224579431,"results":"20","hashOfConfig":"17"},{"size":1143,"mtime":1607217056481,"results":"21","hashOfConfig":"17"},{"size":623,"mtime":1607217056481,"results":"22","hashOfConfig":"17"},{"size":1372,"mtime":1607224583538,"results":"23","hashOfConfig":"17"},{"size":6605,"mtime":1607224504451,"results":"24","hashOfConfig":"17"},{"size":7543,"mtime":1607224579430,"results":"25","hashOfConfig":"17"},{"size":7373,"mtime":1607224579431,"results":"26","hashOfConfig":"17"},{"size":487,"mtime":1607217056480,"results":"27","hashOfConfig":"17"},{"size":259,"mtime":1607224652550,"results":"28","hashOfConfig":"17"},{"size":3991,"mtime":1607225042354,"results":"29","hashOfConfig":"17"},{"size":384,"mtime":1607224231577,"results":"30","hashOfConfig":"17"},{"size":2136,"mtime":1607217056479,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lgsec6",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"P:\\web\\caroadmin\\src\\index.js",[],"P:\\web\\caroadmin\\src\\reportWebVitals.js",[],"P:\\web\\caroadmin\\src\\layouts\\App\\index.js",["65","66","67"],"P:\\web\\caroadmin\\src\\layouts\\Header\\index.js",[],"P:\\web\\caroadmin\\src\\layouts\\Footer\\index.js",["68","69"],"P:\\web\\caroadmin\\src\\layouts\\Loading\\index.js",[],"P:\\web\\caroadmin\\src\\components\\DashBoard\\index.js",["70","71","72","73","74","75","76","77"],"P:\\web\\caroadmin\\src\\components\\LogIn\\index.js",["78","79","80"],"P:\\web\\caroadmin\\src\\components\\SignUp\\index.js",["81","82","83"],"import React, {useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport BackgroundImg from '../../vendors/images/background-img.jpg';\r\n\r\n// Components\r\nimport Footer from '../../layouts/Footer';\r\n\r\n// Constant && Services\r\nimport AuthService from '../../services/auth.service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bgImg: {\r\n    width: '100%',\r\n    height: '90%',\r\n    position: 'absolute',\r\n    zIndex: '-1',\r\n    backgroundImage: \"url(\" + BackgroundImg + \")\",\r\n    backgroundSize: '80% 100%'\r\n  },\r\n  title: {\r\n    color: '#016310',\r\n    zIndex: '1'\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.error.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 0, 1),\r\n    backgroundColor: '#016310'\r\n  },\r\n  formMessageSuccess: {\r\n    textAlign: 'center',\r\n    fontSize: '1.1em',\r\n    color: '#4BB543'\r\n  },\r\n  formMessageFail: {\r\n    textAlign: 'center',\r\n    fontSize: '1.1em',\r\n    color: '#ff1500'\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const history = useHistory();\r\n  if (AuthService.getCurrentUser()){\r\n      history.push('/dashboard');\r\n  }\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repassword, setRePassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isSuccess, setIsSuccess] = useState(true);\r\n  const [errorMsg, setErrMsg] = useState('');\r\n\r\n  function handleUsernameChange(evt){\r\n    setUsername(evt.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(evt){\r\n    setPassword(evt.target.value);\r\n  }\r\n\r\n  function handleRePasswordChange(evt){\r\n    setRePassword(evt.target.value);\r\n  }\r\n\r\n  function handleNameChange(evt){\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleEmailChange(evt){\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  function handleSignUp(event){\r\n    event.preventDefault()\r\n    if (!username || !password || !repassword || (password != repassword) || !name || !email){\r\n        return;\r\n    }\r\n    props.setIsLoading(true);\r\n    const fetch = AuthService.signUp(username, password, name, email).then(result => {\r\n        setIsSuccess(result.isSuccess);\r\n        setErrMsg(result.message);\r\n        props.setIsLoading(false);\r\n    }, (error) => {\r\n      if (error) {\r\n        props.setIsLoading(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.bgImg}></div>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <CreateIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n            Sign up\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={(evt) => handleSignUp(evt)}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"username\"\r\n                  name=\"username\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  autoFocus\r\n                  error={username === \"\"}\r\n                  helperText={username === \"\" ? 'Enter Username' : ' '}\r\n                  onChange={(evt) => handleUsernameChange(evt)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  error={(password === \"\" || repassword === \"\" || password !== repassword)}\r\n                  helperText={(password === \"\" || repassword === \"\" || password !== repassword)? 'Confirm Password incorrect' : ' '}\r\n                  onChange={(evt) => handlePasswordChange(evt)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"re-password\"\r\n                  label=\"Confirm Password\"\r\n                  type=\"password\"\r\n                  id=\"re-password\"\r\n                  autoComplete=\"re-password\"\r\n                  error={(password === \"\" || repassword === \"\" || password !== repassword)}\r\n                  helperText={(password === \"\" || repassword === \"\" || password !== repassword)? 'Confirm Password incorrect' : ' '}\r\n                  onChange={(evt) => handleRePasswordChange(evt)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"fullName\"\r\n                  name=\"fullName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"fullName\"\r\n                  label=\"Full name\"\r\n                  error={name === \"\"}\r\n                  helperText={name === \"\" ? 'Enter Name' : ' '}\r\n                  onChange={(evt) => handleNameChange(evt)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"email\"\r\n                  name=\"email\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  type=\"email\"\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  error={email === \"\"}\r\n                  helperText={email === \"\" ? 'Enter Email' : ' '}\r\n                  onChange={(evt) => handleEmailChange(evt)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <FormHelperText className={(isSuccess)? classes.formMessageSuccess : classes.formMessageFail} error={!isSuccess}>\r\n                {errorMsg}\r\n            </FormHelperText>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n",["84","85"],"P:\\web\\caroadmin\\src\\components\\Profile\\index.js",["86","87"],"import React, {useState, useRef} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n// Material Icons\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\n// Components\r\nimport Footer from '../../layouts/Footer';\r\n\r\n// Constant && Services\r\nimport authHeader from '../../services/auth-header.js';\r\nimport AuthService from '../../services/auth.service';\r\nimport constant from '../../Utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(3),\r\n    color: '#ffffff',\r\n    backgroundColor: theme.palette.secondary.main,\r\n    fontSize: '60px',\r\n    padding: '5px'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 0, 1),\r\n  },\r\n  formMessageSuccess: {\r\n    textAlign: 'center',\r\n    fontSize: '1.1em',\r\n    color: '#4BB543'\r\n  },\r\n  formMessageFail: {\r\n    textAlign: 'center',\r\n    fontSize: '1.1em',\r\n    color: '#ff1500'\r\n  },\r\n  formControl: {\r\n      color: '#555555 !important'\r\n  },\r\n  updateIcon: {\r\n      marginLeft: '10px',\r\n      verticalAlign: 'middle',\r\n      cursor: 'pointer'\r\n  }\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const history = useHistory();\r\n  const user = AuthService.getCurrentUser();\r\n  if (!user){\r\n      history.push('/login');\r\n  }\r\n  const classes = useStyles();\r\n  const [disabled, setDisabled] = useState(true);\r\n  const nameRef = useRef();\r\n  const [name, setName] = useState(user.name);\r\n  const [email, setEmail] = useState(user.email);\r\n  const [gender, setGender] = useState(user.gender);\r\n  const [isSuccess, setIsSuccess] = useState(true);\r\n  const [errorMsg, setErrMsg] = useState('');\r\n\r\n  const toggleUpdate = (evt) => {\r\n      setDisabled(!disabled);\r\n      const timeout = setTimeout(() => {\r\n        nameRef.current.focus();\r\n      }, 100);\r\n  }\r\n\r\n  const handleNameChange = (evt) => {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  const handleEmailChange = (evt) => {\r\n    setEmail(evt.target.value);\r\n  }\r\n\r\n  const handleGenderChange = (evt) => {\r\n    setGender(evt.target.value);\r\n  }\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault()\r\n    if (!name || !email || !gender){\r\n        return;\r\n    }\r\n    props.setIsLoading(true);\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: Object.assign({\r\n            'Content-Type': 'application/json'   \r\n        }, authHeader()),\r\n        body: JSON.stringify({ \r\n            name: name,\r\n            email: email,\r\n            gender: gender\r\n        })\r\n    };\r\n    return fetch(constant.api + constant.userPath + constant.updateProfilePath, requestOptions)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            if (result.isSuccess){\r\n                AuthService.updateCurrentUser({\r\n                    name: name,\r\n                    email: email,\r\n                    gender: gender\r\n                })\r\n            }\r\n            setIsSuccess(result.isSuccess);\r\n            setErrMsg(result.message);\r\n            props.setIsLoading(false);\r\n    }, (error) => {\r\n        if (error) {\r\n          props.setIsLoading(false);\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <AccountBoxIcon className={classes.avatar}>\r\n        </AccountBoxIcon>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Your Profile \r\n          <BorderColorIcon className={classes.updateIcon} onClick={(evt) => toggleUpdate(evt)}/>\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={(evt) => handleUpdate(evt)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fullName\"\r\n                name=\"fullName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"fullName\"\r\n                label=\"Full name\"\r\n                autoFocus\r\n                inputRef={nameRef}\r\n                InputProps={{\r\n                    className: classes.formControl\r\n                }}\r\n                disabled={disabled}\r\n                value={name}\r\n                error={name === \"\"}\r\n                helperText={name === \"\" ? 'Enter Name' : ' '}\r\n                onChange={(evt) => handleNameChange(evt)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"email\"\r\n                name=\"email\"\r\n                variant=\"outlined\"\r\n                required\r\n                type=\"email\"\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                InputProps={{\r\n                    className: classes.formControl\r\n                }}\r\n                disabled={disabled}\r\n                value={email}\r\n                error={email === \"\"}\r\n                helperText={email === \"\" ? 'Enter Email' : ' '}\r\n                onChange={(evt) => handleEmailChange(evt)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Gender</FormLabel>\r\n                <RadioGroup row aria-label=\"gender\" name=\"gender1\" value={gender} onChange={handleGenderChange}>\r\n                    <FormControlLabel disabled={disabled} value=\"Male\" control={<Radio />} label=\"Male\" />\r\n                    <FormControlLabel disabled={disabled} value=\"Female\" control={<Radio />} label=\"Female\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <br/>\r\n          <FormHelperText className={(isSuccess)? classes.formMessageSuccess : classes.formMessageFail} error={!isSuccess}>\r\n              {errorMsg}\r\n          </FormHelperText>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={disabled}\r\n            className={classes.submit}\r\n          >\r\n            Update\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/dashBoard\" variant=\"body2\">\r\n                {\"Back to Dashboard\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","P:\\web\\caroadmin\\src\\layouts\\Footer\\Copyright.js",[],"P:\\web\\caroadmin\\src\\services\\auth-header.js",[],"P:\\web\\caroadmin\\src\\services\\auth.service.js",[],"P:\\web\\caroadmin\\src\\Utils\\index.js",["88"],"P:\\web\\caroadmin\\src\\dialogs\\ConfirmDialog\\index.js",["89","90","91","92"],{"ruleId":"93","severity":1,"message":"94","line":6,"column":3,"nodeType":"95","messageId":"96","endLine":6,"endColumn":7},{"ruleId":"93","severity":1,"message":"97","line":18,"column":8,"nodeType":"95","messageId":"96","endLine":18,"endColumn":14},{"ruleId":"93","severity":1,"message":"98","line":21,"column":8,"nodeType":"95","messageId":"96","endLine":21,"endColumn":25},{"ruleId":"93","severity":1,"message":"99","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":12},{"ruleId":"93","severity":1,"message":"100","line":1,"column":16,"nodeType":"95","messageId":"96","endLine":1,"endColumn":24},{"ruleId":"93","severity":1,"message":"101","line":1,"column":26,"nodeType":"95","messageId":"96","endLine":1,"endColumn":35},{"ruleId":"93","severity":1,"message":"102","line":6,"column":22,"nodeType":"95","messageId":"96","endLine":6,"endColumn":30},{"ruleId":"93","severity":1,"message":"103","line":12,"column":8,"nodeType":"95","messageId":"96","endLine":12,"endColumn":21},{"ruleId":"93","severity":1,"message":"104","line":15,"column":8,"nodeType":"95","messageId":"96","endLine":15,"endColumn":18},{"ruleId":"93","severity":1,"message":"105","line":17,"column":8,"nodeType":"95","messageId":"96","endLine":17,"endColumn":16},{"ruleId":"93","severity":1,"message":"106","line":32,"column":9,"nodeType":"95","messageId":"96","endLine":32,"endColumn":16},{"ruleId":"93","severity":1,"message":"107","line":38,"column":9,"nodeType":"95","messageId":"96","endLine":38,"endColumn":13},{"ruleId":"93","severity":1,"message":"108","line":21,"column":8,"nodeType":"95","messageId":"96","endLine":21,"endColumn":14},{"ruleId":"93","severity":1,"message":"109","line":97,"column":11,"nodeType":"95","messageId":"96","endLine":97,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":196,"column":19,"nodeType":"112","endLine":196,"endColumn":73},{"ruleId":"93","severity":1,"message":"108","line":17,"column":8,"nodeType":"95","messageId":"96","endLine":17,"endColumn":14},{"ruleId":"113","severity":1,"message":"114","line":101,"column":60,"nodeType":"115","messageId":"116","endLine":101,"endColumn":62},{"ruleId":"93","severity":1,"message":"109","line":105,"column":11,"nodeType":"95","messageId":"96","endLine":105,"endColumn":16},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"93","severity":1,"message":"108","line":23,"column":8,"nodeType":"95","messageId":"96","endLine":23,"endColumn":14},{"ruleId":"93","severity":1,"message":"121","line":88,"column":13,"nodeType":"95","messageId":"96","endLine":88,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":14,"column":1,"nodeType":"124","endLine":21,"endColumn":2},{"ruleId":"93","severity":1,"message":"100","line":1,"column":16,"nodeType":"95","messageId":"96","endLine":1,"endColumn":24},{"ruleId":"93","severity":1,"message":"125","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":17},{"ruleId":"93","severity":1,"message":"126","line":10,"column":8,"nodeType":"95","messageId":"96","endLine":10,"endColumn":22},{"ruleId":"93","severity":1,"message":"105","line":13,"column":8,"nodeType":"95","messageId":"96","endLine":13,"endColumn":16},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'SignUp' is defined but never used.","'createHashHistory' is defined but never used.","'CssBaseline' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'rgbToHex' is defined but never used.","'ConfirmDialog' is defined but never used.","'authHeader' is defined but never used.","'constant' is defined but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","'Footer' is defined but never used.","'fetch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'timeout' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'TextField' is defined but never used.","'FormHelperText' is defined but never used.","no-global-assign","no-unsafe-negation"]